<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.safeone.dashboard.dao.LogrIdxMapMapper">
    <sql id="rowSearch">
        <if test="district_nm != null and district_nm != ''">
            and MG.district_nm ilike '%' || #{district_nm} || '%'
        </if>
        <if test="senstype_nm != null and senstype_nm != ''">
            and MG.senstype_nm ilike '%' || #{senstype_nm} || '%'
        </if>
        <if test="sens_nm != null and sens_nm != ''">
            and MG.sens_nm ilike '%' || #{sens_nm} || '%'
        </if>
        <if test="logr_nm != null and logr_nm != ''">
            and MG.logr_nm ilike '%' || #{logr_nm} || '%'
        </if>
        <if test="sens_chnl_nm != null and sens_chnl_nm != ''">
            and MG.sens_chnl_nm ilike '%' || #{sens_chnl_nm} || '%'
        </if>
        <if test="logr_chnl_seq != null and logr_chnl_seq != ''">
            and MG.logr_chnl_seq::varchar ilike '%' || #{logr_chnl_seq} || '%'
        </if>
        <if test="logr_idx_no != null and logr_idx_no != ''">
            and MG.logr_idx_no ilike '%' || #{logr_idx_no} || '%'
        </if>
        <if test="sect_no != null and sect_no != ''">
            and MG.sect_no::varchar ilike '%' || #{sect_no} || '%'
        </if>
        <if test="reg_dt != null and reg_dt != ''">
            and MG.reg_dt ilike '%' || #{reg_dt} || '%'
        </if>
    </sql>

    <sql id="rowOrder">
        <trim prefix="order by">
            <choose>
                <when test="'district_nm' == sidx and sidx != ''">
                    MG.district_nm ${sord}
                </when>
                <when test="'senstype_nm' == sidx and sidx != ''">
                    MG.senstype_nm ${sord}
                </when>
                <when test="'sens_nm' == sidx and sidx != ''">
                    MG.sens_nm ${sord}
                </when>

                <when test="'logr_nm' == sidx and sidx != ''">
                    MG.logr_nm ${sord}
                </when>
                <when test="'logr_no' == sidx and sidx != ''">
                    MG.logr_no ${sord}
                </when>
                <when test="'sens_chnl_nm' == sidx and sidx != ''">
                    MG.sens_chnl_nm ${sord}
                </when>
                <when test="'logr_chnl_seq' == sidx and sidx != ''">
                    MG.logr_chnl_seq ${sord}
                </when>
                <when test="'logr_idx_no' == sidx and sidx != ''">
                    MG.logr_idx_no ${sord}
                </when>
                <when test="'sect_no' == sidx and sidx != ''">
                    MG.sect_no ${sord}
                </when>
                <when test="'reg_dt' == sidx and sidx != ''">
                    MG.reg_dt ${sord}
                </when>

                <when test="'mod_dt' == sidx and sidx != ''">
                    MG.mod_dt ${sord}
                </when>
                <otherwise>
                    MG.reg_dt
                </otherwise>
            </choose>
        </trim>
    </sql>

    <select id="selectLogrIdxMapList" parameterType="java.util.Map" resultType="com.safeone.dashboard.dto.LogrIdxMapDto">
        SELECT MG.*
        FROM (
            SELECT
                A.sens_no
                , (SELECT C.sens_tp_nm
                    FROM tb_sensor_type C
                    WHERE C.senstype_no = (SELECT B.senstype_no
                                            FROM tb_sensor_info B
                                            WHERE B.sens_no = A.sens_no)) AS senstype_nm
                , (SELECT B.logr_nm FROM tb_logger_info B WHERE B.logr_no = A.logr_no) AS logr_nm
                , (SELECT B.sens_nm FROM tb_sensor_info B WHERE B.sens_no = A.sens_no) AS sens_nm
                , (SELECT C.district_nm
                    FROM tb_district_info C
                    WHERE C.district_no = (SELECT B.district_no
                                            FROM tb_logger_info B
                                            WHERE B.logr_no = A.logr_no)) AS district_nm
                , A.logr_no
                , A.logr_idx_no
                , A.sens_chnl_nm
                , A.logr_chnl_seq
                , A.sect_no
                , A.district_no
                , A.sens_chnl_id
                , to_char(A.reg_dt, 'YYYY-MM-DD') AS reg_dt
                , A.senstype_no
            FROM tb_logr_idx_map A
        ) MG
        WHERE 1=1
        <include refid="rowSearch"/>
        <include refid="rowOrder"/>
<!--        <if test="page != null and page > 0">-->
<!--            limit #{rows}::int offset (#{page}::int - 1) * #{rows}::int-->
<!--        </if>-->
    </select>

    <select id="selectLogrIdxMapListTotal" parameterType="java.util.Map" resultType="int">
        SELECT count(*)
        FROM (
        SELECT
            A.sens_no
            , (SELECT C.sens_tp_nm
                    FROM tb_sensor_type C
                    WHERE C.senstype_no = (SELECT B.senstype_no
                                            FROM tb_sensor_info B
                                            WHERE B.sens_no = A.sens_no)) AS senstype_nm
            , (SELECT B.logr_nm FROM tb_logger_info B WHERE B.logr_no = A.logr_no) AS logr_nm
            , (SELECT B.sens_nm FROM tb_sensor_info B WHERE B.sens_no = A.sens_no) AS sens_nm
            , (SELECT C.district_nm
                FROM tb_district_info C
                WHERE C.district_no = (SELECT B.district_no
                                        FROM tb_logger_info B
                                        WHERE B.logr_no = A.logr_no)) AS district_nm
            , A.sens_chnl_id
            , A.logr_no
            , A.logr_idx_no
            , A.sens_chnl_nm
            , A.logr_chnl_seq
            , A.sect_no
            , A.district_no
            , A.sens_chnl_id
            , to_char(A.reg_dt, 'YYYY-MM-DD') AS reg_dt
        FROM tb_logr_idx_map A
        ) MG
        WHERE 1=1
        <include refid="rowSearch"/>
    </select>

    <insert id="insertLogrIdxMap" parameterType="java.util.Map">
        INSERT INTO tb_logr_idx_map (
            <if test="sens_no != null">sens_no</if>
            <if test="sens_chnl_id != null">, sens_chnl_id</if>
            <if test="logr_no != null">, logr_no</if>
            <if test="logr_idx_no != null">, logr_idx_no</if>
            <if test="sens_chnl_nm != null">, sens_chnl_nm</if>
            <if test="logr_chnl_seq != null">, logr_chnl_seq</if>
            <if test="sect_no != null">, sect_no</if>
            <if test="district_no != null">, district_no</if>
            <if test="senstype_no != null">, senstype_no</if>
            , reg_dt
        ) VALUES (
            <if test="sens_no != null">#{sens_no}</if>
            <if test="sens_chnl_id != null">, #{sens_chnl_id}</if>
            <if test="logr_no != null">, #{logr_no}</if>
            <if test="logr_idx_no != null">, LPAD(#{logr_idx_no}::text, 3, '0')</if>
            <if test="sens_chnl_nm != null">, #{sens_chnl_nm}</if>
            <if test="logr_chnl_seq != null">, #{logr_chnl_seq}::int</if>
            <if test="sect_no != null">, #{sect_no}::int</if>
            <if test="district_no != null">, #{district_no}</if>
            <if test="senstype_no != null">, #{senstype_no}</if>
            , current_timestamp
        )
    </insert>


    <update id="updateLogrIdxMap" parameterType="java.util.Map">
        update tb_logr_idx_map set
            mod_dt = now()
        <if test="sens_no != null">
            , sens_no = #{sens_no}
        </if>
        <if test="sens_chnl_id != null">
            , sens_chnl_id = #{sens_chnl_id}
        </if>
        <if test="logr_no != null">
            , logr_no = #{logr_no}
        </if>
        <if test="logr_idx_no != null">
            , logr_idx_no = #{logr_idx_no}
        </if>
        <if test="sens_chnl_nm != null">
            , sens_chnl_nm = #{sens_chnl_nm}
        </if>
        <if test="logr_chnl_seq != null">
            , logr_chnl_seq = #{logr_chnl_seq}::int
        </if>
        <if test="sect_no != null">
            , sect_no = #{sect_no}::int
        </if>
        <if test="district_no != null">
            , district_no = #{district_no}
        </if>
        where mapping_no = #{mapping_no}
    </update>

    <delete id="deleteLogrIdxMap" parameterType="java.util.Map">
        DELETE FROM tb_logr_idx_map
         WHERE sens_no = #{sens_no}
    </delete>

    <update id="updateLogrIdx" parameterType="com.safeone.dashboard.dto.LogrIdxMapDto">
        update tb_logr_idx_map set
            mod_dt = now()
            , logr_idx_no = #{logr_idx_no}
        where sens_no = #{sens_no}
            and logr_chnl_seq = CAST (#{logr_chnl_seq} AS INTEGER);
    </update>
</mapper>