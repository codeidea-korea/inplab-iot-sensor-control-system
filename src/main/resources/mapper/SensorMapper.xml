<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.safeone.dashboard.dao.SensorMapper">
    <sql id="rowSearch">
        <if test="asset_kind_id != null and asset_kind_id != ''">
            and MG.asset_kind_id = #{asset_kind_id}
        </if>
        <if test="name != null and name != ''">
            and MG.name ilike '%' || #{name} || '%'
        </if>
		<if test="zone_id != null and zone_id != ''">
			and MG.zone_id = #{zone_id}
		</if>
		<if test="zone_name != null and zone_name != ''">
			and MG.zone_name ilike #{zone_name} || '%'
		</if>
		<if test="install_date_start != null and install_date_start != '' and install_date_end != null and install_date_end != ''">
			and MG.install_date::timestamp between concat(#{install_date_start},' 00:00:00')::timestamp and concat(#{install_date_end},' 23:59:59')::timestamp
		</if>
		<if test="collect_date_start != null and collect_date_start != '' and collect_date_end != null and collect_date_end != ''">
			and to_date(MG.collect_date, 'YYYY-MM-DD') between #{collect_date_start}::date and #{collect_date_end}::date
		</if>
        <if test="status != null and status != ''">
            and MG.status ilike '%' || #{status} || '%'
        </if>
        <if test="real_value != null and real_value != ''">
            and MG.real_value ilike '%' || #{real_value} || '%'
        </if>
    </sql>

    <sql id="rowOrder">
        <trim prefix="order by">
            <choose>
				<when test="'asset_kind_id' == sidx and sidx != ''">
                    MG.asset_kind_id ${sord}
                </when>
				<when test="'name' == sidx and sidx != ''">
                    MG.name ${sord}
                </when>
                <when test="'zone_id' == sidx and sidx != ''">
                    MG.zone_id ${sord}
                </when>
                <when test="'zone_name' == sidx and sidx != ''">
                    MG.zone_name ${sord}
                </when>
                <when test="'install_date' == sidx and sidx != ''">
                    MG.install_date ${sord}
                </when>
                <when test="'collect_date' == sidx and sidx != ''">
                    MG.collect_date ${sord}
                </when>
                <when test="'status' == sidx and sidx != ''">
                    MG.status ${sord}
                </when>
                <when test="'value' == sidx and sidx != ''">
                    MG.value ${sord}
                </when>
                <when test="'real_value' == sidx and sidx != ''">
                    MG.real_value ${sord}
                </when>
                <otherwise>
					MG.zone_id, MG.name
                </otherwise>
            </choose>
        </trim>
    </sql>
    
    <sql id="chRowSearch">
        <if test="asset_kind_id != null and asset_kind_id != ''">
            and MG.asset_kind_id = #{asset_kind_id}
        </if>
        <if test="name != null and name != ''">
            and MG.name ilike '%' || #{name} || '%'
        </if>
        <if test="zone_id != null and zone_id != ''">
            and MG.zone_id = #{zone_id}
        </if>
		<if test="zone_name != null and zone_name != ''">
			and MG.zone_name ilike '%' || #{zone_name} || '%'
		</if>
        <if test="install_date != null and install_date != ''">
            and MG.install_date ilike '%' || #{install_date} || '%'
        </if>
		<if test="ch_collect_date_start != null and ch_collect_date_start != '' and ch_collect_date_end != null and ch_collect_date_end != ''">
			and to_date(MG.ch_collect_date, 'YYYY-MM-DD') between #{ch_collect_date_start}::date and #{ch_collect_date_end}::date
		</if>
        <if test="status != null and status != ''">
            and MG.status ilike '%' || #{status} || '%'
        </if>
        <if test="real_value != null and real_value != ''">
            and MG.real_value ilike '%' || #{real_value} || '%'
        </if>
    </sql>

    <sql id="chRowOrder">
        <trim prefix="order by">
            <choose>
				<when test="'asset_kind_id' == sidx and sidx != ''">
                    MG.asset_kind_id ${sord}
                </when>
				<when test="'name' == sidx and sidx != ''">
                    MG.name ${sord}
                </when>
                <when test="'zone_id' == sidx and sidx != ''">
                    MG.zone_id ${sord}
                </when>
                <when test="'zone_name' == sidx and sidx != ''">
                    MG.zone_name ${sord}
                </when>
                <when test="'install_date' == sidx and sidx != ''">
                    MG.install_date ${sord}
                </when>
                <when test="'ch_collect_date' == sidx and sidx != ''">
                    MG.ch_collect_date ${sord}
                </when>
                <when test="'status' == sidx and sidx != ''">
                    MG.status ${sord}
                </when>
                <when test="'value' == sidx and sidx != ''">
                    MG.value ${sord}
                </when>
                <when test="'real_value' == sidx and sidx != ''">
                    MG.real_value ${sord}
                </when>
                <otherwise>
					MG.zone_id, MG.name
                </otherwise>
            </choose>
        </trim>
    </sql>
    
    <select id="selectGroupSensorList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT MG.*
		FROM (
			SELECT
				ass.*
				, zo.name as zone_name
		FROM ( 
			select
				tak.name asset_kind_name,
				tak.asset_kind_id,
				ta.asset_id,
				ta."name",
				ta.status,
				TO_CHAR(TO_TIMESTAMP(MAX(dbc.collect_date) , 'YYYY/MM/DD HH24:MI:SS'), 'YYYY/MM/DD HH24:MI:SS') as collect_date,
				ta.zone_id
			from tb_asset ta
				left join tb_asset_kind tak on ta.asset_kind_id = tak.asset_kind_id 
				LEFT outer join tb_channel ch ON ta.asset_id = ch.asset_id
				left outer join 
				(
					SELECT *
					FROM tb_dps_basecollection
					WHERE (sensor_id, zone_id, collect_date)
					IN ( SELECT sensor_id, zone_id, MAX(collect_date)
						FROM tb_dps_basecollection
						GROUP BY sensor_id, zone_id )
				) dbc on ch.sensor_id = dbc.sensor_id and ch.zone_id = dbc.zone_id
			where ta.asset_kind_id IN ('2','3','4','6','7')    
			group by tak.name, tak.asset_kind_id, ta.asset_id, ta."name", ta.status
			order by ta.asset_kind_id desc
			) ass
			LEFT JOIN tb_zone zo ON zo.zone_id = ass.zone_id
			WHERE zo.use_flag = 'Y'
		) MG
		WHERE 1=1
		<include refid="rowSearch"/>
        <include refid="rowOrder"/>
        <if test="page != null and page > 0">
            limit #{rows}::int offset (#{page}::int - 1) * #{rows}::int
        </if>
	</select>

	<select id="selectGroupSensorTotal" parameterType="java.util.Map" resultType="int">
		SELECT count(1)
		FROM (
			SELECT
				ass.*
				, zo.name as zone_name
		FROM (
			select
				tak.name asset_kind_name,
				tak.asset_kind_id,
				ta.asset_id,
				ta."name",
				ta.status,
				TO_CHAR(TO_TIMESTAMP(MAX(dbc.collect_date) , 'YYYY/MM/DD HH24:MI:SS'), 'YYYY/MM/DD HH24:MI:SS') as collect_date,
				ta.zone_id
			from tb_asset ta 
				left join tb_asset_kind tak on ta.asset_kind_id = tak.asset_kind_id 
				LEFT outer join tb_channel ch ON ta.asset_id = ch.asset_id
				left outer join 
				(
					SELECT *
					FROM tb_dps_basecollection
					WHERE (sensor_id, zone_id, collect_date)
					IN ( SELECT sensor_id, zone_id, MAX(collect_date)
						FROM tb_dps_basecollection
						GROUP BY sensor_id, zone_id )
				) dbc on ch.sensor_id = dbc.sensor_id and ch.zone_id = dbc.zone_id
			where ta.asset_kind_id IN ('2','3','4','6','7')    
			group by tak.name, tak.asset_kind_id, ta.asset_id, ta."name", ta.status
			order by ta.asset_kind_id desc
			) ass
			LEFT JOIN tb_zone zo ON zo.zone_id = ass.zone_id
			WHERE zo.use_flag = 'Y'
		) MG
		WHERE 1=1
		<include refid="rowSearch"/>
	</select>

    <select id="selectSensorList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT MG.*
		FROM (
			SELECT
			    ass.*
			     , zo.name as zone_name
			FROM
			(
				SELECT ass.asset_kind_id
						, ass.name
						, '' sensor_id
						, ass.zone_id
						, ass.status
						, TO_CHAR(ass.install_date::timestamp, 'YYYY-MM-DD') AS install_date
						, TO_CHAR(TO_TIMESTAMP(MAX(dbc.collect_date) , 'YYYY/MM/DD HH24:MI:SS'), 'YYYY/MM/DD HH24:MI:SS') as collect_date
						, MAX(dbc.real_value) real_value
				FROM tb_asset ass
					LEFT JOIN tb_channel ch ON ass.asset_id = ch.asset_id
						LEFT JOIN (SELECT *
									FROM tb_dps_basecollection
									WHERE (sensor_id, zone_id, collect_date)
									IN ( SELECT sensor_id, zone_id, MAX(collect_date)
										 FROM tb_dps_basecollection
										GROUP BY sensor_id, zone_id )
									) dbc ON ch.sensor_id = dbc.sensor_id and ch.zone_id = dbc.zone_id
				WHERE ass.asset_kind_id = '2'
				GROUP BY ass.asset_kind_id,ass.name, ass.zone_id, ass.status, ass.install_date
				UNION ALL
						SELECT ass.asset_kind_id
						, ch.name as name
						, ch.sensor_id
						, ass.zone_id
						, ass.status
						, TO_CHAR(ass.install_date::timestamp, 'YYYY-MM-DD') AS install_date
						, TO_CHAR(TO_TIMESTAMP(dbc.collect_date , 'YYYY/MM/DD HH24:MI:SS'), 'YYYY/MM/DD HH24:MI:SS') as collect_date
						, dbc.real_value
				FROM tb_asset ass
					LEFT JOIN tb_channel ch ON ass.asset_id = ch.asset_id
						LEFT JOIN (SELECT *
									FROM tb_dps_basecollection
									WHERE (sensor_id, zone_id, collect_date)
									IN ( SELECT sensor_id, zone_id, MAX(collect_date)
										 FROM tb_dps_basecollection
										GROUP BY sensor_id, zone_id )
									) dbc ON ch.sensor_id = dbc.sensor_id and ch.zone_id = dbc.zone_id
				WHERE ass.asset_kind_id IN ('2','3','4','6','7')
			) ass
			LEFT JOIN tb_zone zo ON zo.zone_id = ass.zone_id
			WHERE zo.use_flag = 'Y'
		) MG
		WHERE 1=1
        <include refid="rowSearch"/>
        <include refid="rowOrder"/>
        <if test="page != null and page > 0">
            limit #{rows}::int offset (#{page}::int - 1) * #{rows}::int
        </if>
    </select>
    
    <select id="selectSensorListTotal" parameterType="java.util.Map" resultType="int">
		SELECT count(1) 
		FROM (
			SELECT
				ass.*
				, zo.name as zone_name
			FROM (
			SELECT ass.asset_kind_id
						, ass.name
						, '' ch_name
						, '' sensor_id
						, ass.zone_id
						, ass.status
						, TO_CHAR(ass.install_date::timestamp, 'YYYY-MM-DD') AS install_date
						, TO_CHAR(TO_TIMESTAMP(MAX(dbc.collect_date) , 'YYYY/MM/DD HH24:MI:SS'), 'YYYY/MM/DD HH24:MI:SS') as collect_date
						, MAX(dbc.real_value) real_value
				FROM tb_asset ass
					LEFT JOIN tb_channel ch ON ass.asset_id = ch.asset_id
						LEFT JOIN (SELECT *
									FROM tb_dps_basecollection
									WHERE (sensor_id, zone_id, collect_date)
									IN ( SELECT sensor_id, zone_id, MAX(collect_date)
										 FROM tb_dps_basecollection
										GROUP BY sensor_id, zone_id )
									) dbc ON ch.sensor_id = dbc.sensor_id and ch.zone_id = dbc.zone_id
				WHERE ass.asset_kind_id = '2'
				GROUP BY ass.asset_kind_id,ass.name, ass.zone_id, ass.status, ass.install_date
				UNION ALL
						SELECT ass.asset_kind_id
						, ass.name
						, ch.name ch_name
						, ch.sensor_id
						, ass.zone_id
						, ass.status
						, TO_CHAR(ass.install_date::timestamp, 'YYYY-MM-DD') AS install_date
						, TO_CHAR(TO_TIMESTAMP(dbc.collect_date , 'YYYY/MM/DD HH24:MI:SS'), 'YYYY/MM/DD HH24:MI:SS') as collect_date
						, dbc.real_value
				FROM tb_asset ass
					LEFT JOIN tb_channel ch ON ass.asset_id = ch.asset_id
						LEFT JOIN (SELECT *
									FROM tb_dps_basecollection
									WHERE (sensor_id, zone_id, collect_date)
									IN ( SELECT sensor_id, zone_id, MAX(collect_date)
										 FROM tb_dps_basecollection
										GROUP BY sensor_id, zone_id )
									) dbc ON ch.sensor_id = dbc.sensor_id and ch.zone_id = dbc.zone_id
				WHERE ass.asset_kind_id IN ('2','3','4','6','7')
			) ass
			LEFT JOIN tb_zone zo ON zo.zone_id = ass.zone_id
			WHERE zo.use_flag = 'Y'
		) MG
		WHERE 1=1
        <include refid="rowSearch"/>
    </select>
    
    <select id="selectSensorByChannelList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT MG.*
		FROM ( 
			SELECT ass.asset_id
			    	, ass.asset_kind_id
					, ass.asset_kind_id asset_kind_id_hid
					, ass.name
					-- , '' ch_name
					-- , '' sensor_id
					, ARRAY_TO_STRING(ARRAY_AGG(ch.name||':'||ch.sensor_id||':'||ch.zone_id),',') ch_name_sensor_keys
					-- , ARRAY_TO_STRING(ARRAY_AGG(ch.sensor_id),',') sensor_ids
					, ass.zone_id
					, ass.status
					, TO_CHAR(ass.install_date::timestamp, 'YYYY-MM-DD') AS install_date
					, TO_CHAR(TO_TIMESTAMP(MAX(dbc.collect_date) , 'YYYY/MM/DD HH24:MI:SS'), 'YYYY/MM/DD HH24:MI:SS') as ch_collect_date
					, MAX(dbc.real_value) real_value
					, (select name from tb_zone WHERE zone_id = ass.zone_id) zone_name
			FROM tb_asset ass
				LEFT JOIN tb_channel ch ON ass.asset_id = ch.asset_id
					LEFT JOIN (SELECT *
								FROM tb_dps_basecollection
								WHERE (sensor_id, zone_id, collect_date)
								IN ( SELECT sensor_id, zone_id, MAX(collect_date)
									 FROM tb_dps_basecollection
									GROUP BY sensor_id, zone_id )
								) dbc ON ch.sensor_id = dbc.sensor_id and ch.zone_id = dbc.zone_id
			WHERE ass.asset_kind_id IN ('2','3','4','6','7')
			GROUP BY ass.asset_id, ass.asset_kind_id,ass.name, ass.zone_id, ass.status, ass.install_date
		) MG
		LEFT JOIN tb_zone zo ON zo.zone_id = MG.zone_id
		WHERE 1=1
		and zo.use_flag = 'Y'
        <include refid="chRowSearch"/>
        <include refid="chRowOrder"/>
        <if test="page != null and page > 0">
            limit #{rows}::int offset (#{page}::int - 1) * #{rows}::int
        </if>
    </select>
    
    <select id="selectSensorByChannelListTotal" parameterType="java.util.Map" resultType="int">
    	-- selectSensorByChannelListTotal
		SELECT count(1) 
		FROM ( 
			SELECT ass.asset_kind_id
					, ass.asset_kind_id asset_kind_id_hid
					, ass.name
					-- , '' ch_name
					-- , '' sensor_id
					, ARRAY_TO_STRING(ARRAY_AGG(ch.name||':'||ch.sensor_id||':'||ch.zone_id),',') ch_name_sensor_keys
					-- , ARRAY_TO_STRING(ARRAY_AGG(ch.sensor_id),',') sensor_ids
					, ass.zone_id
					, ass.status
					, TO_CHAR(ass.install_date::timestamp, 'YYYY-MM-DD') AS install_date
					, TO_CHAR(TO_TIMESTAMP(MAX(dbc.collect_date) , 'YYYY/MM/DD HH24:MI:SS'), 'YYYY/MM/DD HH24:MI:SS') as ch_collect_date
					, MAX(dbc.real_value) real_value
					, (select name from tb_zone WHERE zone_id = ass.zone_id) zone_name
			FROM tb_asset ass
				LEFT JOIN tb_channel ch ON ass.asset_id = ch.asset_id
					LEFT JOIN (SELECT *
								FROM tb_dps_basecollection
								WHERE (sensor_id, zone_id, collect_date)
								IN ( SELECT sensor_id, zone_id, MAX(collect_date)
									 FROM tb_dps_basecollection
									GROUP BY sensor_id, zone_id )
								) dbc ON ch.sensor_id = dbc.sensor_id and ch.zone_id = dbc.zone_id
			WHERE ass.asset_kind_id IN ('2','3','4','6','7')
			GROUP BY ass.asset_id, ass.asset_kind_id,ass.name, ass.zone_id, ass.status, ass.install_date
		) MG
		LEFT JOIN tb_zone zo ON zo.zone_id = MG.zone_id
		WHERE 1=1
		and zo.use_flag = 'Y'
        <include refid="chRowSearch"/>
    </select>
    
</mapper>