<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.safeone.dashboard.dao.MeasureDetailsMapper">
    <sql id="rowSearch">
        <if test="sens_tp_nm != null and sens_tp_nm != ''">
            and A.sens_tp_nm ilike '%' || #{sens_tp_nm} || '%'
        </if>
        <if test="sens_nm != null and sens_nm != ''">
            and A.sens_nm ilike '%' || #{sens_nm} || '%'
        </if>
        <if test="init_apply_dt != null and init_apply_dt != ''">
            and A.init_apply_dt::varchar ilike '%' || #{init_apply_dt} || '%'
        </if>
        <if test="sect_no != null and sect_no != ''">
            and A.sect_no::varchar ilike '%' || #{sect_no} || '%'
        </if>
        <if test="maint_sts_cd != null and maint_sts_cd != ''">
            and A.maint_sts_cd ilike '%' || #{maint_sts_cd} || '%'
        </if>
    </sql>

    <sql id="rowOrder">
        <trim prefix="order by">
            <choose>
                <when test="'sens_tp_nm' == sidx and sidx != ''">
                    A.sens_tp_nm ${sord}
                </when>
                <when test="'sens_nm' == sidx and sidx != ''">
                    A.sens_nm ${sord}
                </when>
                <when test="'init_apply_dt' == sidx and sidx != ''">
                    A.init_apply_dt ${sord}
                </when>
                <when test="'sect_no' == sidx and sidx != ''">
                    A.sect_no ${sord}
                </when>
                <when test="'maint_sts_cd' == sidx and sidx != ''">
                    A.maint_sts_cd ${sord}
                </when>
                <otherwise>
                    A.sens_nm
                </otherwise>
            </choose>
        </trim>
    </sql>

    <select id="selectList" parameterType="java.util.Map"
            resultType="com.safeone.dashboard.dto.MeasureDetailsDto">
        select * from (
        SELECT tsinfo.sens_nm,
        tsinfo.sect_no,
        tsinfo.maint_sts_cd,
        MAX(tst.sens_tp_nm) AS sens_tp_nm,
        MAX(tst.senstype_no) AS senstype_no,
        MAX(tsi.formul_data) AS formul_data,
        MIN(tsi.init_apply_dt) AS init_apply_dt,
        MAX(tsi.last_apply_dt) AS last_apply_dt,
        MAX(tsi.emer_status) AS emer_status,
        tsinfo.sens_no,
        MAX(tsi.sens_chnl_id) AS sens_chnl_id
        FROM tb_sensor_info tsinfo
        LEFT JOIN tb_sensor_init tsi
        ON tsinfo.sens_no = tsi.sens_no
        LEFT JOIN tb_sensor_type tst
        ON tsinfo.senstype_no = tst.senstype_no
        WHERE 1 = 1
        and tsinfo.sens_no IN (SELECT tlim.sens_no
        FROM tb_logr_idx_map tlim
        WHERE tlim.logr_no IN (SELECT tli.logr_no
        FROM tb_district_info tdi
        LEFT JOIN tb_logger_info tli
        ON tli.district_no = tdi.district_no
        WHERE tdi.district_no = #{district_no}))
        GROUP BY tsinfo.sens_nm, tsinfo.sens_no
        ORDER BY senstype_no, sens_no, sens_chnl_id
        <if test="page != null and page > 0">
            limit #{rows}::int offset (#{page}::int - 1) * #{rows}::int
        </if>
        ) A
        WHERE 1=1
        <include refid="rowSearch"/>
        <include refid="rowOrder"/>
    </select>

    <select id="selectListTotal" parameterType="java.util.Map" resultType="int">
        select count(A.*) from (SELECT tsinfo.sens_nm,
        tsinfo.sect_no,
        tsinfo.maint_sts_cd,
        MAX(tst.sens_tp_nm) AS sens_tp_nm,
        MAX(tst.senstype_no) AS senstype_no,
        MAX(tsi.formul_data) AS formul_data,
        MIN(tsi.init_apply_dt) AS init_apply_dt,
        MAX(tsi.last_apply_dt) AS last_apply_dt,
        MAX(tsi.emer_status) AS emer_status,
        tsinfo.sens_no,
        MAX(tsi.sens_chnl_id) AS sens_chnl_id
        FROM tb_sensor_info tsinfo
        LEFT JOIN tb_sensor_init tsi
        ON tsinfo.sens_no = tsi.sens_no
        LEFT JOIN tb_sensor_type tst
        ON tsinfo.senstype_no = tst.senstype_no
        WHERE 1 = 1
        and tsinfo.sens_no IN (SELECT tlim.sens_no
        FROM tb_logr_idx_map tlim
        WHERE tlim.logr_no IN (SELECT tli.logr_no
        FROM tb_district_info tdi
        LEFT JOIN tb_logger_info tli
        ON tli.district_no = tdi.district_no
        WHERE tdi.district_no = #{district_no}))
        GROUP BY tsinfo.sens_nm, tsinfo.sens_no) as A
        WHERE 1=1
        <include refid="rowSearch"/>
    </select>

    <select id="selectSensorChartData" parameterType="java.util.Map"
            resultType="com.safeone.dashboard.dto.MeasureDetailsDto">
        select tmd.sens_no,
               tsi.sens_nm,
               tmd.formul_data,
               tmd.meas_dt,
               tai."1st_lvl_max" as lvl_max1,
               tai."2nd_lvl_max" as lvl_max2,
               tai."3rd_lvl_max" as lvl_max3,
               tai."4th_lvl_max" as lvl_max4
        from tb_measure_details tmd
                 left join tb_alarm_info tai on tai.sens_no = tmd.sens_no
                 left join tb_sensor_info tsi on tmd.sens_no = tsi.sens_no
        where tmd.meas_dt::timestamp between (#{start_date_time}:: timestamp)
          and (#{end_date_time}:: timestamp)
          and tmd.sens_no = #{sens_no}
        order by meas_dt
    </select>

</mapper>