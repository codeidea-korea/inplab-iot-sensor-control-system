<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.safeone.dashboard.dao.UserMapper">
    <sql id="rowSearch">
        <if test="usr_id != null and usr_id != ''">
            and MG.usr_id  ilike '%' || #{usr_id} || '%'
        </if>
        <if test="usr_nm != null and usr_nm != ''">
            and MG.usr_nm ilike '%' || #{usr_nm} || '%'
        </if>
        <if test="usr_flag != null and usr_flag != ''">
            and MG.usr_flag = #{usr_flag}
        </if>
        <if test="e_mail != null and e_mail != ''">
            and MG.e_mail ilike '%' || #{e_mail} || '%'
        </if>
        <if test="usr_ph != null and usr_ph != ''">
            and MG.usr_ph ilike '%' || #{usr_ph} || '%'
        </if>
        <if test="reg_date_start != null and reg_date_start != '' and reg_date_end != null and reg_date_end != ''">
            and MG.reg_dt::timestamp between (#{reg_date_start}::timestamp) and (#{reg_date_end}::timestamp)
        </if>      
        <if test="mod_date_start != null and mod_date_start != '' and mod_date_end != null and mod_date_end != ''">
            and MG.mod_dt::timestamp between (#{mod_date_start}::timestamp) and (#{mod_date_end}::timestamp)
        </if>
    </sql>

    <sql id="rowOrder">
        <trim prefix="order by">
            <choose>
                <when test="'usr_id' == sidx and sidx != ''">
                    MG.usr_id ${sord}
                </when>
                <when test="'usr_nm' == sidx and sidx != ''">
                    MG.usr_nm ${sord}
                </when>
                <when test="'e_mail' == sidx and sidx != ''">
                    MG.e_mail ${sord}
                </when>
                <when test="'usr_ph' == sidx and sidx != ''">
                    MG.usr_ph ${sord}
                </when>
                <when test="'usr_flag' == sidx and sidx != ''">
                    MG.usr_flag ${sord}
                </when>                
                <when test="'reg_dt' == sidx and sidx != ''">
                    MG.reg_dt ${sord}
                </when>
                <when test="'mod_dt' == sidx and sidx != ''">
                    MG.mod_dt ${sord}
                </when>
                <otherwise>
                    MG.usr_id
                </otherwise>
            </choose>
        </trim>
    </sql>

    <select id="selectUserList" parameterType="java.util.Map" resultType="com.safeone.dashboard.dto.UserDto">
        SELECT MG.*
        FROM (
            SELECT
	            A.usr_id
        --                 , A.usr_pwd
        --                 , A.usr_pwd_confm
                , '' as usr_pwd
                , '' as usr_pwd_confm
	            , A.usr_nm
	            , A.usr_ph
	            , TO_CHAR(A.mod_dt::timestamp, 'YYYY-MM-DD') AS mod_dt
                , fn_common(usr_flag ,'회원구분') as usr_flag
-- 	            , A.usr_flag
	            , A.usr_flag as usr_flag_hid
	            , TO_CHAR(A.reg_dt::timestamp, 'YYYY-MM-DD') AS reg_dt
	            , A.e_mail
	            , A.usr_exp_ymd
            FROM tb_user_info A
        ) MG
        WHERE 1=1
        <include refid="rowSearch"/>
        <include refid="rowOrder"/>
        <if test="page != null and page > 0">
            limit #{rows}::int offset (#{page}::int - 1) * #{rows}::int
        </if>
    </select>

    <select id="selectUserListTotal" parameterType="java.util.Map" resultType="int">
        SELECT count(*)
        FROM (
	        SELECT
	            A.usr_id
--                 , A.usr_pwd
--                 , A.usr_pwd_confm
                , '' as usr_pwd
                , '' as usr_pwd_confm
	            , TO_CHAR(A.mod_dt::timestamp, 'YYYY-MM-DD') AS mod_dt
                , fn_common(usr_flag ,'회원구분') as usr_flag
-- 	            , A.usr_flag
	            , A.usr_flag as usr_flag_hid
	            , TO_CHAR(A.reg_dt::timestamp, 'YYYY-MM-DD') AS reg_dt
	            , A.e_mail
	            , A.usr_exp_ymd
	        FROM tb_user_info A
        ) MG
        WHERE 1=1
        <include refid="rowSearch"/>
    </select>

    <insert id="insertUser" parameterType="java.util.Map">
        INSERT INTO tb_user_info ( usr_id
        					 , usr_pwd
        					 , usr_pwd_confm
					         , usr_nm
					         , usr_ph
							 , mod_dt
							 , usr_flag
							 , reg_dt
							 , e_mail
							 , usr_exp_ymd
		)VALUES( #{usr_id}
				 , #{usr_pwd}
				 , #{usr_pwd_confm}
		         , #{usr_nm}
		         , #{usr_ph}
				 , now()
				 , #{usr_flag_hid}
				 , now()				 
				 , #{e_mail}
				 , #{usr_exp_ymd}
		)
    </insert>

    <update id="updateUser" parameterType="java.util.Map">
        update tb_user_info set
            mod_dt = now()
        <if test="usr_pwd != null and usr_pwd != ''">
            , usr_pwd = #{usr_pwd}
        </if>
        <if test="usr_pwd_confm != null and usr_pwd_confm != ''">
            , usr_pwd_confm = #{usr_pwd_confm}
        </if>
        <if test="usr_nm != null">
            , usr_nm = #{usr_nm}
        </if>
        <if test="usr_ph != null">
            , usr_ph = #{usr_ph}
        </if>
        <if test="usr_flag_hid != null">
            , usr_flag = #{usr_flag_hid}
        </if>
        <if test="e_mail != null">
            , e_mail = #{e_mail}
        </if>
        <if test="use_yn != null">
            , use_yn = #{use_yn}
        </if>
        <if test="usr_exp_ymd != null">
            , usr_exp_ymd = #{usr_exp_ymd}
        </if>
        where usr_id = #{usr_id}
    </update>

    <delete id="deleteUser" parameterType="java.util.Map">
        DELETE FROM tb_user_info
         WHERE usr_id = #{usr_id}
    </delete>

    <select id="isUserIdExists" parameterType="java.util.Map" resultType="int">
        select count(*) from tb_user_info
        where usr_id = #{usr_id}
    </select>

    <select id="selectUserLogin" parameterType="java.util.Map" resultType="com.safeone.dashboard.dto.UserDto">
        select * from tb_user_info
        where usr_id = #{userId}
    </select>

    <update id="updatePassword" parameterType="java.util.Map">
        update tb_user_info
        set usr_pwd = #{usr_pwd}
          , mod_dt = now()
        where usr_id = #{usr_id}
    </update>

</mapper>