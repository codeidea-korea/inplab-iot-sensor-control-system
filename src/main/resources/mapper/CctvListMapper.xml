<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.safeone.dashboard.dao.CctvListMapper">
    <sql id="rowSearch">
        <if test="asset_kind_id != null and asset_kind_id != ''">
            and MG.asset_kind_id = #{asset_kind_id}
        </if>
        <if test="name != null and name != ''">
            and MG.name ilike '%' || #{name} || '%'
        </if>
        <if test="channel_name != null and channel_name != ''">
            and MG.channel_name ilike '%' || #{channel_name} || '%'
        </if>
        <if test="area_id != null and area_id != ''">
            and MG.area_id = #{area_id}
        </if>
        <if test="zone_id != null and zone_id != ''">
            and MG.zone_id = #{zone_id}
        </if>
        <if test="install_date != null and install_date != ''">
            and MG.install_date ilike '%' || #{install_date} || '%'
        </if>
        <if test="collect_date != null and collect_date != ''">
            and MG.collect_date ilike '%' || #{collect_date} || '%'
        </if>
		<if test="collect_date_start != null and collect_date_start != '' and collect_date_end != null and collect_date_end != ''">
			and to_date(MG.collect_date, 'YYYY-MM-DD') between #{collect_date_start}::date and #{collect_date_end}::date
		</if>
        <if test="status != null and status != ''">
            and MG.status = #{status}
        </if>
        <if test="real_value != null and real_value != ''">
            and MG.real_value ilike '%' || #{real_value} || '%'
        </if>
    </sql>

    <sql id="rowOrder">
        <trim prefix="order by">
            <choose>
				<when test="'asset_kind_id' == sidx and sidx != ''">
                    MG.asset_kind_id ${sord}
                </when>
				<when test="'name' == sidx and sidx != ''">
                    MG.name ${sord}
                </when>
				<when test="'channel_name' == sidx and sidx != ''">
                    MG.channel_name ${sord}
                </when>
                <when test="'area_id' == sidx and sidx != ''">
                    MG.area_id ${sord}
                </when>
                <when test="'zone_id' == sidx and sidx != ''">
                    MG.zone_id ${sord}
                </when>
                <when test="'install_date' == sidx and sidx != ''">
                    MG.install_date ${sord}
                </when>
                <when test="'collect_date' == sidx and sidx != ''">
                    MG.collect_date ${sord}
                </when>
                <when test="'status' == sidx and sidx != ''">
                    MG.status ${sord}
                </when>
                <when test="'real_value' == sidx and sidx != ''">
                    MG.real_value ${sord}
                </when>
                <otherwise>
                    MG.asset_id::integer
                </otherwise>
            </choose>
        </trim>
    </sql>
    
    <select id="selectCctvList" parameterType="java.util.Map" resultType="com.safeone.dashboard.dto.CctvListDto">
		SELECT MG.* 
        FROM (
			SELECT ass.asset_id 
				 , ass.asset_kind_id
				 , ass.asset_kind_id asset_kind_id_hid
				 , ass.area_id
				 , ta2.name as area_name
				 , ass.area_id area_id_hid
				 , ass.zone_id
				 , tz.name as zone_name
				 , ass.zone_id zone_id_hid
				 , ass.status
				 , ass.status status_hid
				 , TO_CHAR(ass.install_date::timestamp, 'YYYY-MM-DD') AS install_date
				 , ass.name	
				 , ARRAY_TO_STRING(ARRAY_AGG(ch.sensor_id ORDER BY ch.seq),',') sensor_id
				 , TO_CHAR(TO_TIMESTAMP(MAX(dbc.collect_date) , 'YYYY/MM/DD HH24:MI:SS'), 'YYYY/MM/DD HH24:MI:SS') as collect_date
				 , MAX(dbc.real_value) real_value 					 
				 , ass.device_id 		
				 , ass.description 	 
				 , ass.etc1
				 , ass.etc2
				 , ass.etc3
				 , ass.x
				 , ass.y
				 , ass.z
			FROM tb_asset ass
				LEFT JOIN tb_channel ch ON ass.asset_id = ch.asset_id
					LEFT JOIN (SELECT *
									FROM tb_dps_basecollection
									WHERE (sensor_id, zone_id, collect_date)
									IN ( SELECT sensor_id, zone_id, MAX(collect_date)
										 FROM tb_dps_basecollection
										GROUP BY sensor_id, zone_id ) 
									) dbc ON ch.sensor_id = dbc.sensor_id and ch.zone_id = dbc.zone_id, tb_zone tz, tb_area ta2
			WHERE ass.area_id = ta2.area_id
			  and ass.zone_id = tz.zone_id 	
			GROUP BY ass.asset_id 
				 , ass.asset_kind_id
				 , ass.area_id
				 , ass.zone_id
				 , ass.status
				 , TO_CHAR(ass.install_date::timestamp, 'YYYY-MM-DD')
				 , ass.name
				 , ta2.name
				 , tz.name
				 , ass.device_id
        ) MG
        WHERE 1=1
		  and MG.asset_kind_id = '8'
        <include refid="rowSearch"/>
        <include refid="rowOrder"/>
        <if test="page != null and page > 0">
            limit #{rows}::int offset (#{page}::int - 1) * #{rows}::int
        </if>
    </select>

    <select id="selectCctvListTotal" parameterType="java.util.Map" resultType="int">
        SELECT count(*)
        FROM (
			SELECT ass.asset_id 
				 , ass.asset_kind_id
				 , ass.asset_kind_id asset_kind_id_hid
				 , ass.area_id
				 , ass.area_id area_id_hid
				 , ass.zone_id
				 , ass.zone_id zone_id_hid
				 , ass.status
				 , ass.status status_hid
				 , TO_CHAR(ass.install_date::timestamp, 'YYYY-MM-DD') AS install_date
				 
				 -- 센서
				 , ass.name				-- 센서명
				 , ARRAY_TO_STRING(ARRAY_AGG(ch.sensor_id ORDER BY ch.seq),',') sensor_id

				 , TO_CHAR(TO_TIMESTAMP(MAX(dbc.collect_date) , 'YYYY/MM/DD HH24:MI:SS'), 'YYYY/MM/DD HH24:MI:SS') as collect_date
				 , MAX(dbc.real_value) real_value 	-- 센서값
				 
				-- 센서 외
				 , ass.device_id 		-- 장비 ID
			--	 , ass.description 
			--	 , ass.use_flag				 
			--	 , ass.etc1
			--	 , ass.etc2
			--	 , ass.etc3
			--	 , ass.mod_date
			--	 , ass.mod_user
			--	 , ass.reg_date
			--	 , ass.x
			--	 , ass.y
			--	 , ass.z
			FROM tb_asset ass
				LEFT JOIN tb_channel ch ON ass.asset_id = ch.asset_id
					LEFT JOIN (SELECT *
									FROM tb_dps_basecollection
									WHERE (sensor_id, zone_id, collect_date)
									IN ( SELECT sensor_id, zone_id, MAX(collect_date)
										 FROM tb_dps_basecollection
										GROUP BY sensor_id, zone_id ) 
									) dbc ON ch.sensor_id = dbc.sensor_id and ch.zone_id = dbc.zone_id
			GROUP BY ass.asset_id 
				 , ass.asset_kind_id
				 , ass.area_id
				 , ass.zone_id
				 , ass.status
				 , TO_CHAR(ass.install_date::timestamp, 'YYYY-MM-DD')
				 , ass.name
				 , ass.device_id
        ) MG
        WHERE 1=1
		  and MG.asset_kind_id = '8'
        <include refid="rowSearch"/>
    </select>
</mapper>