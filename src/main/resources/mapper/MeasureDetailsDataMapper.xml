<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.safeone.dashboard.dao.MeasureDetailsDataMapper">
    <sql id="rowSearch">
        <if test="sens_tp_nm != null and sens_tp_nm != ''">
            and tst.sens_tp_nm ilike '%' || #{sens_tp_nm} || '%'
        </if>
        <if test="sens_nm != null and sens_nm != ''">
            and tsinfo.sens_nm ilike '%' || #{sens_nm} || '%'
        </if>
        <if test="sens_chnl_nm != null and sens_chnl_nm != ''">
            and tai.sens_chnl_nm ilike '%' || #{sens_chnl_nm} || '%'
        </if>
        <if test="formul_data != null and formul_data != ''">
            and tsi.formul_data ilike '%' || #{formul_data} || '%'
        </if>
        <if test="meas_dt_start != null and meas_dt_start != '' and meas_dt_end != null and meas_dt_end != ''">
            and meas_dt::timestamp between concat(#{meas_dt_start},' 00:00:00')::timestamp and
            concat(#{meas_dt_end},' 23:59:59')::timestamp
        </if>
        <if test="last_apply_dt_start != null and last_apply_dt_start != '' and last_apply_dt_end != null and last_apply_dt_end != ''">
            and last_apply_dt::timestamp between concat(#{last_apply_dt_start},' 00:00:00')::timestamp and
            concat(#{last_apply_dt_end},' 23:59:59')::timestamp
        </if>
        <if test="emer_status != null and emer_status != ''">
            and tsi.emer_status ilike '%' || #{emer_status} || '%'
        </if>
    </sql>

    <sql id="rowOrder">
        <trim prefix="order by">
            <choose>
                <when test="'meas_dt' == sidx and sidx != ''">
                    meas_dt ${sord}
                </when>
                <when test="'raw_data' == sidx and sidx != ''">
                    raw_data ${sord}
                </when>
                <when test="'formul_data' == sidx and sidx != ''">
                    formul_data ${sord}
                </when>
                <when test="'raw_data_x' == sidx and sidx != ''">
                    raw_data_x ${sord}
                </when>
                <when test="'formul_data_x' == sidx and sidx != ''">
                    formul_data_x ${sord}
                </when>
                <when test="'raw_data_y' == sidx and sidx != ''">
                    raw_data_y ${sord}
                </when>
                <when test="'formul_data_y' == sidx and sidx != ''">
                    formul_data_y ${sord}
                </when>
                <when test="'raw_data_z' == sidx and sidx != ''">
                    raw_data_z ${sord}
                </when>
                <when test="'formul_data_z' == sidx and sidx != ''">
                    formul_data_z ${sord}
                </when>
                <otherwise>
                    latest_reg_dt asc
                </otherwise>
            </choose>
        </trim>
    </sql>

    <insert id="insert" parameterType="java.util.Map">
        INSERT INTO tb_measure_details
        (mgnt_no,
         sens_no,
         meas_dt,
         sens_chnl_id,
         raw_data,
         formul_data,
         reg_dt)
        VALUES ((SELECT COALESCE(MAX(mgnt_no), 0) + 1 FROM tb_measure_details),
                #{sens_no},
                #{meas_dt}::timestamp,
                #{sens_chnl_id},
                #{raw_data}::double precision,
                #{formul_data}::double precision,
                now())
    </insert>

    <update id="update" parameterType="java.util.Map">
        UPDATE tb_measure_details
        SET raw_data = #{raw_data}::double precision,
            formul_data = #{formul_data}:: double precision
        WHERE sens_no = #{sens_no}
          AND meas_dt = #{meas_dt}:: timestamp
          and sens_chnl_id = #{sens_chnl_id}
    </update>

    <delete id="delete" parameterType="java.util.Map">
        DELETE
        FROM tb_measure_details
        WHERE sens_no = #{sens_no}
          AND meas_dt = #{meas_dt}:: timestamp
          and sens_chnl_id = #{sens_chnl_id}
    </delete>

    <delete id="deleteRow" parameterType="java.util.Map">
        DELETE
        FROM tb_measure_details
        WHERE sens_no = #{sens_no}
          AND meas_dt = #{meas_dt}:: timestamp
    </delete>

    <select id="isAlreadyExists" parameterType="java.util.Map"
            resultType="com.safeone.dashboard.dto.MeasureDetailsDataDto">
        SELECT sens_no, meas_dt, sens_chnl_id
        FROM tb_measure_details
        WHERE sens_no = #{sens_no}
          AND meas_dt = #{meas_dt}::timestamp
          AND sens_chnl_id = #{sens_chnl_id}
    </select>

    <select id="selectXYZ" parameterType="java.util.Map" resultType="com.safeone.dashboard.dto.MeasureDetailsDataDto">
        select sens_no, meas_dt, raw_data, formul_data
        from tb_measure_details
        WHERE sens_no = #{sens_no}
          AND meas_dt = #{meas_dt}::timestamp
    </select>

    <select id="selectList" parameterType="java.util.Map"
            resultType="com.safeone.dashboard.dto.MeasureDetailsDataDto">
        select * from (
        SELECT
        sens_no,
        meas_dt,
        MAX(CASE WHEN sens_chnl_id = '' THEN raw_data END) AS raw_data,
        MAX(CASE WHEN sens_chnl_id = 'X' THEN raw_data END) AS raw_data_x,
        MAX(CASE WHEN sens_chnl_id = 'Y' THEN raw_data END) AS raw_data_y,
        MAX(CASE WHEN sens_chnl_id = 'Z' THEN raw_data END) AS raw_data_z,
        MAX(CASE WHEN sens_chnl_id = '' THEN formul_data END) AS formul_data,
        MAX(CASE WHEN sens_chnl_id = 'X' THEN formul_data END) AS formul_data_x,
        MAX(CASE WHEN sens_chnl_id = 'Y' THEN formul_data END) AS formul_data_y,
        MAX(CASE WHEN sens_chnl_id = 'Z' THEN formul_data END) AS formul_data_z,
        MAX(net_err_cnt) AS total_net_err_cnt,
        MAX(alarm_lvl_cd) AS alarm_lvl_cd, -- 가장 높은 레벨로 묶음
        MAX(reg_dt) AS latest_reg_dt
        FROM
        tb_measure_details
        where 1 = 1
        and sens_no = #{sens_no}
        <include refid="rowSearch"/>
        GROUP BY sens_no, meas_dt
        <include refid="rowOrder"/>
        <if test="page != null and page > 0">
            limit #{rows}::int offset (#{page}::int - 1) * #{rows}::int
        </if>
        ) A
    </select>

    <select id="selectListTotal" parameterType="java.util.Map" resultType="int">
        SELECT
        COUNT(*) AS total_count
        FROM (
        SELECT
        sens_no,
        meas_dt
        FROM
        tb_measure_details
        WHERE
        1 = 1
        AND sens_no = #{sens_no}
        <include refid="rowSearch"/>
        GROUP BY
        sens_no, meas_dt
        ) as total
    </select>

    <delete id="deleteAll" parameterType="java.util.Map">
        DELETE
        FROM tb_measure_details
        WHERE sens_no = #{sens_no}
    </delete>
</mapper>